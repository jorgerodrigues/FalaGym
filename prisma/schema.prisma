// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @unique @default(uuid())
  email     String  @unique
  firstName String?
  lastName  String?
  status    String  @default("ACTIVE")
  password  String

  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  prompt         Prompt[]
  SentenceOnUser SentenceOnUser[]

  @@map("user")
}

model SentenceOnUser {
  id         String   @id @unique @default(uuid())
  sentence   Sentence @relation(fields: [sentenceId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  sentenceId String
  userId     String

  @@map("sentence_on_user")
}

model Sentence {
  id             String           @id @unique @default(uuid())
  content        String
  translation    String
  userId         String?
  words          Words[]
  SentenceOnUser SentenceOnUser[]

  @@map("sentence")
}

model Words {
  id         String    @id @unique @default(uuid())
  word       String
  definition String
  language   String
  Sentence   Sentence? @relation(fields: [sentenceId], references: [id])
  sentenceId String?

  @@map("words")
}

model Prompt {
  id          String @id @unique @default(uuid())
  theme       String
  description String

  user       User        @relation(fields: [userId], references: [id])
  userId     String
  infoPoints InfoPoint[]
  tries      Try[]

  @@map("prompt")
}

model InfoPoint {
  id       String  @id @unique @default(uuid())
  content  String
  category String?
  promptId String
  prompt   Prompt  @relation(fields: [promptId], references: [id])

  @@map("info-prompt")
}

model Try {
  id               String  @id @unique @default(uuid())
  essay            String
  wordCount        Int?
  overallScore     Int
  grammarScore     Int
  spellingScore    Int
  punctuationScore Int
  styleScore       Int
  prompt           Prompt? @relation(fields: [promptId], references: [id])
  promptId         String?

  @@map("try")
}
